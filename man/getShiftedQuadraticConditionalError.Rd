% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getShiftedQuadraticConditionalError.R
\name{getShiftedQuadraticConditionalError}
\alias{getShiftedQuadraticConditionalError}
\title{Calculated Shifted Quadratic Conditional Error}
\usage{
getShiftedQuadraticConditionalError(firstStagePValue, alpha, shift)
}
\arguments{
\item{firstStagePValue}{First-stage p-value or p-values. Must be a numeric vector between 0 and 1.}

\item{alpha}{The overall type I error rate \eqn{\alpha} of the design. Must be a numeric value between 0 and 1.}

\item{shift}{Shift value. Should be between 0 and 1.}
}
\value{
Shifted quadratic conditional error.
}
\description{
Calculated Shifted Quadratic Conditional Error
}
\details{
The shifted quadratic conditional error function can be used to illustrate conditional error functions with different monotonicity.
It is defined as:
\deqn{\alpha_2(p_1) = c\cdot (p_1-s)^2.}
To meet overall level condition, the constant \eqn{c} is determined. The choice of the shift value \eqn{s \in [0,1]} results in a conditional error function which is increasing (\eqn{s=0}), decreasing (\eqn{s=1}) or not strictly monotone (\eqn{s \in ]0,1[}).
The form of the shifted quadratic conditional error function is based on mathematical convenience, as exact calculations of the type I error rate can be performed.
For practical use cases, refer to \code{getCircularConditionalError()}, \code{getInverseNormalConditionalError()} and \code{getOptimalConditionalError()}.
}
\examples{
getShiftedQuadraticConditionalError(
firstStagePValue = 0.1, alpha = 0.025, shift = 0.5)

}
