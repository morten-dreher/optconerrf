% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrateExpectedInformation.R
\name{integrateExpectedInformation}
\alias{integrateExpectedInformation}
\title{Integrate over information}
\usage{
integrateExpectedInformation(firstStagePValue, design, distDelta, ...)
}
\arguments{
\item{firstStagePValue}{First-stage p-value or p-values. Must be a numeric vector between 0 and 1.}

\item{design}{A list created by \code{getDesignOptimalConditionalErrorFunction()}. Contains all necessary arguments to calculate the non-increasing optimal conditional error function for the specified case.}

\item{distDelta}{Distribution under which to calculate the expected sample size, passed to \code{getLikelihoodRatio()}. Specified in the same way as \code{dist}, but values are allowed to be different. \cr
Options are \code{"fixed", "normal", "exp", "unif", "maxlr"} for fixed, normally distributed, exponentially distributed, uniformly distributed and maximum likelihood ratio, respectively.
Each case requires different additional specifications. \code{"fixed"} requires the parameter \code{ncpDelta} which provides the non-centrality parameter under which to calculate the likelihood ratio.
If \code{ncpLR} contains multiple values, they can be weighted using an additional argument \code{weightsDelta}. \code{"normal"} requires parameters \code{ncpDelta} and \code{tauDelta} for the mean and standard deviation of the normal distribution (both on non-centrality parameter scale).
\code{"exp"} requires the parameter \code{kap0Delta} which is the mean of the exponential distribution (on the non-centrality parameter scale).
\code{"unif"} requires the specification of \code{delMaxDelta}, which is the maximum of the support for the uniform likelihood ratio distribution (on the non-centrality parameter scale).}

\item{...}{Additional arguments needed for \code{getOptimalConditionalError()} and \code{getLikelihoodRatio()}.}
}
\value{
Integral over the information of the second stage
}
\description{
Internal function used by \code{getExpectedSecondStageInformation()} to calculate the integral over the information.
}
\keyword{internal}
