% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getDesignOptimalConditionalErrorFunction.R
\name{getDesignOptimalConditionalErrorFunction}
\alias{getDesignOptimalConditionalErrorFunction}
\title{Create a design object for the optimal conditional error function.}
\usage{
getDesignOptimalConditionalErrorFunction(
  alpha,
  alpha1,
  alpha0,
  conditionalPower = NA_real_,
  delta1 = NA_real_,
  delta1Min = NA_real_,
  delta1Max = Inf,
  ncp1 = NA_real_,
  ncp1Min = NA_real_,
  ncp1Max = Inf,
  useInterimEstimate = TRUE,
  firstStageInformation,
  likelihoodRatioDistribution,
  minimumSecondStageInformation = 0,
  maximumSecondStageInformation = Inf,
  minimumConditionalError = 0,
  maximumConditionalError = 1,
  levelConstantMinimum = 0,
  levelConstantMaximum = 10,
  enforceMonotonicity = TRUE,
  ...
)
}
\arguments{
\item{alpha}{The overall type I error rate \eqn{\alpha} of the design. Must be a numeric value between 0 and 1.}

\item{alpha1}{Stage 1 efficacy boundary \eqn{\alpha_1} (p-value scale). Must be a numeric value between 0 and 1. Should be smaller than \code{alpha0}.}

\item{alpha0}{Binding stage 1 futility boundary \eqn{\alpha_0} (p-value scale). Must be a numeric value between 0 and 1. Should be greater than \code{alpha1}. For use of a non-binding futility boundary, specify \code{alpha0=1}.}

\item{conditionalPower}{The target conditional power \eqn{CP} of the design. Must be a numeric value.}

\item{delta1}{Fixed effect assumption at which the conditional power should be achieved, expressed on the mean difference scale. Must be a numeric value greater than 0.}

\item{delta1Min}{The minimum for an interim estimate of the treatment effect, specified on the mean difference scale. Must be a numeric value.}

\item{delta1Max}{The maximum for an interim estimate of the treatment effect, specified on the mean difference scale. Must be a numeric value.}

\item{ncp1}{Fixed effect assumption at which the conditional power should be achieved, expressed on the non-centrality parameter scale. Must be a numeric value greater than 0.}

\item{ncp1Min}{The minimum for an interim estimate of the treatment effect, specified on the non-centrality parameter scale. Must be a numeric value.}

\item{ncp1Max}{The maximum for an interim estimate of the treatment effect, specified on the non-centrality parameter scale. Must be a numeric value.}

\item{useInterimEstimate}{Logical. Defines whether or not an interim estimate should be used for conditional power.
If \code{TRUE}, a lower cut-off for the interim estimate must be specified by \code{delta1Min} or \code{ncp1Min}. An upper cut-off may also
be specified by \code{delta1Max} or \code{ncp1Max}. If \code{FALSE}, the fixed effect size must be specified by \code{delta1} or \code{ncp1}.}

\item{firstStageInformation}{Information of the first stage of the trial. Must be a positive numeric value.}

\item{likelihoodRatioDistribution}{The distribution to be used for the effect size of the likelihood ratio in the optimal conditional error function. Options are \code{"fixed", "normal", "exp", "unif", "maxlr"} for fixed effect size, normally distributed, exponentially distributed, uniformly distributed prior of the effect size and maximum likelihood ratio, respectively.
Each case requires different additional specifications. \cr
\itemize{
\item \code{likelihoodRatioDistribution="fixed"} uses one (or more) fixed effect sizes for the likelihood ratio and requires the parameter \code{deltaLR} which provides the mean difference under which to calculate the likelihood ratio. If \code{deltaLR} contains multiple values, they may be weighted using an additional argument \code{weightsDeltaLR}. Omitting \code{weightsDeltaLR} automatically leads to equal weighting.
\item \code{likelihoodRatioDistribution="normal"} uses a normal prior for the effect size and requires parameters \code{deltaLR} and \code{tauLR} for the mean and standard deviation of the normal distribution (both on mean difference scale).
\item \code{likelihoodRatioDistribution="exp"} uses an exponential prior for the effect size and requires the parameter \code{kappaLR} which is the mean of the exponential distribution (on the mean difference scale).
\item \code{likelihoodRatioDistribution="unif"} uses a uniform prior for the effect size and requires the specification of \code{deltaMaxLR}, which is the maximum of the support for the uniform likelihood ratio distribution (on the mean difference scale).
\item \code{likelihoodRatioDistribution="maxlr"} estimates the non-centrality parameter to be used for the likelihood ratio from the data. No additional parameters must be specified.
}}

\item{minimumSecondStageInformation}{The minimum information allowed in the second stage of the trial. Must be a numeric value.}

\item{maximumSecondStageInformation}{The maximum information allowed in the second stage of the trial. Must be a numeric value.}

\item{minimumConditionalError}{Lower boundary for the optimal conditional error function. Default 0 (no restriction).}

\item{maximumConditionalError}{Upper boundary for the optimal conditional error function. Default value is 1, however, the optimal conditional error function is inherently bounded by the conditional power.}

\item{levelConstantMinimum}{The minimum of the interval on which the value for the level constant should be searched. Default value is 0.}

\item{levelConstantMaximum}{The maximum of the interval on which the value for the level constant should be searched. Default value is 10.}

\item{enforceMonotonicity}{Logical. Determines whether or not the optimal conditional error function should automatically be modified to be non-increasing. Default is \code{TRUE}.}

\item{...}{Additional arguments required for the specification of the likelihood ratio.}
}
\value{
An object of class \code{TrialDesignOptimalConditionalError}, which can be passed to other package functions.
}
\description{
This function returns a design object which contains all important parameters for the specification of the optimal CEF.
The returned object can be passed to other package functions.
}
\details{
The design object contains the information required to determine the specific setting of the optimal conditional error function and can be passed to other package functions.
From the given user specifications, the constant to achieve level condition for control of the overall type I error rate as well as the constants to ensure a non-increasing optimal CEF are automatically calculated.
}
\section{Likelihood ratio distribution}{

To calculate the optimal conditional error function, an assumption about the true parameter under which the second-stage information is to be minimised is required.
Various options are available and specified via the argument \code{likelihoodRatioDistribution}:
\itemize{
\item \code{likelihoodRatioDistribution="fixed"}: calculates the likelihood ratio for a fixed \eqn{\Delta}. The non-centrality parameter of the likelihood ratio \eqn{\vartheta} is then computed as \code{deltaLR}*\code{sqrt(firstStageInformation)} and the likelihood ratio is calculated as:
\deqn{l(p_1) = e^{\Phi^{-1}(1-p_1)\vartheta - \vartheta^2/2}.} \code{deltaLR} may also contain multiple elements, in which case a weighted likelihood ratio is calculated for the given values. Unless positive weights that sum to 1 are provided by the argument \code{weightsDeltaLR}, equal weights are assumed.
\item \code{likelihoodRatioDistribution="normal"}: calculates the likelihood ratio for a normally distributed prior of \eqn{\vartheta} with mean \code{deltaLR}*\code{sqrt(firstStageInformation)} (\eqn{\mu}) and standard deviation \code{tauLR}*\code{sqrt(firstStageInformation)} (\eqn{\sigma}). The parameters \code{deltaLR} and \code{tauLR} must be specified on the mean difference scale.
\deqn{l(p_1) = (1+\sigma^2)^{-\frac{1}{2}}\cdot e^{-(\mu/\sigma)^2/2 + (\sigma\Phi^{-1}(1-p_1) + \mu/\sigma)^2 / (2\cdot (1+\sigma^2))}}
\item \code{likelihoodRatioDistribution="exp"}: calculates the likelihood ratio for an exponentially distributed prior of \eqn{\vartheta} with mean \code{kappaLR}*\code{sqrt(firstStageInformation)} (\eqn{\eta}). The likelihood ratio is then calculated as:
\deqn{l(p_1) = \kappa \cdot \sqrt{2\pi} \cdot e^{(\Phi^{-1}(1-p_1)-\eta)^2/2} \cdot \Phi(\Phi^{-1}(1-p_1)-\eta)}
\item \code{likelihoodRatioDistribution="unif"}: calculates the likelihood ratio for a uniformly distributed prior of \eqn{\vartheta} on the support \eqn{[0, \Delta\cdot\sqrt{I_1}]}, where \eqn{\Delta} is specified as \code{deltaMaxLR} and \eqn{I_1} is the \code{firstStageInformation}.
\deqn{l(p_1) = \frac{\sqrt{2\pi}}{\Delta\cdot\sqrt{I_1}} \cdot e^{\Phi^{-1}(1-p_1)^2/2} \cdot (\Phi(\Delta\cdot\sqrt{I_1} - \Phi^{-1}(1-p_1))-p_1)}
\item \code{likelihoodRatioDistribution="maxlr"}: the non-centrality parameter \eqn{\vartheta} is estimated from the data and no additional parameters must be specified. The likelihood ratio is estimated from the data as:
\deqn{l(p_1) = e^{max(0, \Phi^{-1}(1-p_1))^2/2}}
The maximum likelihood ratio is always restricted to effect sizes \eqn{\vartheta \geq 0}. (respectively \eqn{p_1 \leq 0.5}).
}
}

\section{Effect for conditional power}{

For the treatment effect at which the target conditional power should be achieved, either a fixed effect or an interim estimate can be used.
The usage of a fixed effect is indicated by setting \code{useInterimEstimate=FALSE} and the effect can be provided by \code{delta1} on the mean difference scale or by \code{ncp1} on the non-centrality parameter scale (i.e., \code{delta1*firstStageInformation}).
For an interim estimate, specified by \code{useInterimEstimate=TRUE}, a lower cut-off for the interim estimate must be provided, either by \code{delta1Min} on the mean difference scale, or \code{ncp1Min} on the non-centrality parameter scale.
In addition, upper limits of the estimate may be analogously provided by \code{delta1Max} and \code{ncp1Max}.
}

\section{Monotonicity}{

By default, the optimal conditional error function returned by \code{getDesignOptimalConditionalErrorFunction()} is transformed to be non-increasing in the first-stage p-value \eqn{p_1}.
The necessary intervals and constants for the transformation are calculated by \code{getMonotonisationConstants()}.
Although not recommended for the operating characteristics of the design, the transformation may be omitted by setting \code{enforceMonotonicity=FALSE}.
}

\section{Level constant}{

The level constant is determined by the helper function \code{getLevelConstant()}. It is identified using the \code{uniroot()} function and by default, the interval between 0 and 10 is searched.
In specific settings, the level constant may lie outside of this interval. In such cases, the search interval can be changed by altering the parameters \code{levelConstantMinimum} and \code{levelConstantMaximum}.
}

\section{Generic functions}{

The \code{print()} and \code{plot()} functions are available for objects of class \code{TrialDesignOptimalConditionalError}.
For details, see \code{?print.TrialDesignOptimalConditionalError} and \code{?plot.TrialDesignOptimalConditionalError}.
}

\examples{
getDesignOptimalConditionalErrorFunction(
alpha = 0.025, alpha1 = 0.001, alpha0 = 0.5, conditionalPower = 0.9,
delta1 = 0.5, likelihoodRatioDistribution = "fixed", deltaLR = 1,
firstStageInformation = 2, useInterimEstimate = FALSE,
minimumSecondStageInformation = 2, maximumSecondStageInformation = 40)

getDesignOptimalConditionalErrorFunction(
alpha = 0.025, alpha1 = 0.001, alpha0 = 0.5, conditionalPower = 0.9,
delta1Min = 0.5, likelihoodRatioDistribution = "maxlr",
firstStageInformation = 2, useInterimEstimate = TRUE)

}
